project : default-build <include>include <link>static <variant>release ;

import hn ;

import testing ;

unit-test NullaryBinder : NullaryBinder.cpp hn-cpplib ;

unit-test test : test.hn hn-cpplib ;

unit-test test2 : test2.hn hn-cpplib ;

unit-test test_flip : test_flip.hn hn-cpplib ;

unit-test test_flip2 : test_flip2.cpp hn-cpplib ;

unit-test test_flip3 : test_flip3.hn hn-cpplib ;

unit-test test_io : test_io.hn hn-cpplib ;

unit-test test3 : test3.hn hn-cpplib ;

unit-test test_poly : test_poly.hn hn-cpplib ;

unit-test io2 : io2.hn hn-cpplib ;

unit-test io3 : io3.cpp hn-cpplib ;

unit-test io4_voidbind : io4_voidbind.hn hn-cpplib ;

unit-test flip4 : flip4.hn hn-cpplib ;

unit-test natrec : natrec.hn hn-cpplib ;

unit-test print15 : print15.hn hn-cpplib ;

unit-test fbh : flip_by_hand.cpp hn-cpplib ;

unit-test locals1 : locals1.hn hn-cpplib  ;

unit-test locals2 : locals2.hn hn-cpplib ;

unit-test locals3 : locals3.hn hn-cpplib ;

unit-test locals4 : locals4.hn hn-cpplib ;

unit-test locals5 : locals5.hn hn-cpplib ;

unit-test locals6 : locals6.hn hn-cpplib ;

unit-test locals7 : locals7.hn hn-cpplib ;

unit-test poly_size : poly_size.cpp hn-cpplib ;

unit-test euler1 : euler1.hn hn-cpplib ;

unit-test euler5 : euler5.hn hn-cpplib ;

unit-test euler6 : euler6.hn hn-cpplib ;

unit-test name_clash1w : name_clash1w.hn hn-cpplib ; 

unit-test name_clash1f : name_clash1f.hn hn-cpplib ; # overlapped identifiers in different scopes (typecheck fails)

unit-test where : where.hn hn-cpplib ;

unit-test where2 : where2.hn hn-cpplib ;

unit-test where3 : where3.hn hn-cpplib ;

explicit
	locals1	   # less and filter functions are not implemented yet
	test_flip  # compile only
	test_poly  # where polymorphism (elist polymorphic constant is not supported)
	io2        # no template args for pointers to polymorphic functions
	flip4      # overlapped identifiers in different scopes (TUL is not supported)
	euler6     # polymorphic by mistake
	locals6	   # polymorphic by mistake
	locals7	   # polymorphic by mistake
	euler5     # polymorphic by mistake
	locals5	   # function is not static
	locals2    # typechecking failure
	test2
	test_flip3
	test3
	print15
	locals3
	locals4
	euler1
	name_clash1w
	name_clash1f
	where
	where3    # multiple local vars
;
